#ifndef BD_H_
#define BD_H_

//----------------------------------------
// Описание портов и пинов для светодиодов ТЭН и ПУСК:
#define PORT_LED         B    // Порт для светодиодов ТЭН, ПУСК
#define PIN_LED_TEN      4    // Пин порта для светодиода ТЭН
#define PIN_LED_START    7    // Пин порта для светодиода ПУСК

#define LED_TEN_ON       PORT(PORT_LED) |= _BV(PIN_LED_TEN)     // Включить светодиод ТЭН
#define LED_TEN_OFF      PORT(PORT_LED) &= ~_BV(PIN_LED_TEN)    // Выключить светодиод ТЭН
#define LED_START_ON     PORT(PORT_LED) |= _BV(PIN_LED_START)   // Включить светодиод ПУСК
#define LED_START_OFF    PORT(PORT_LED) &= ~_BV(PIN_LED_START)  // Выключить светодиод ПУСК
//----------------------------------------

// Запишем здесь все "магические" числа:
#define FALSE    0        // ЛОЖЬ
#define TRUE     !FALSE   // ИСТИНА

#define INTEGRAL_GIST_GRAD  200    // Гистерезис для интеграла, *100'C
#define RPM_GIST_GRAD       2000   // Гистерезис для частоты вращения, *100'C
// Адреса в памяти EEPROM для хранения настроечных значений:
#define EEP_CLEN_BYTE      0xFF   // Пустой байт
#define EEP_CLEN_WORD      0xFFFF // Пустое слово
#define ADDREEP_TEMPER_SET 0x00 // Адрес в EEPROM для установленной температуры temper_set (2 байта)
#define ADDREEP_RPM_SET    0x02 // Адрес в EEPROM для установленной частоты вращения rpm_set (2 байта)
#define ADDREEP_BR_LED     0x06 // Адрес в EEPROM для яркости LED-индикатора (1 байт)
#define ADDREEP_REF_U      0x08 // Адрес в EEPROM для измеренного напряжения откалиброванным вольтметром reference_U (1 байт)
#define ADDREEP_REF_UADC   0x0A // Адрес в EEPROM для измеренного значения U АЦП reference_UADC (2 байта)
#define ADDREEP_REF_I      0x09 // Адрес в EEPROM для измеренного тока откалиброванным амперметром reference_I (1 байт)
#define ADDREEP_REF_IADC   0x0C // Адрес в EEPROM для измеренного значения I АЦП reference_IADC (2 байта)
// Константы для работы с внешней EEPROM
#define BYTES_TO_EEPEXT   16   // Количество байт, передаваемых во внешнюю EEPROM одним сообщением
#define INTERVAL_BW_MSG   30   // Интервал между отправляемыми сообщениями
#define FREE_EEPEXT       1000 // 100% свободной внешней EEPROM памяти
// Константы для "битых" ячеек памяти внешней EEPROM
#define ADDREEP_BAD_EEPEXT_FIRST 0xB0 // Первый адрес блока ячеек памяти внутренней EEPROM для хранения адресов "битых" ячеек памяти внешней EEPROM
#define ADDREEP_BAD_EEPEXT_LAST  0xCE // Последний адрес блока ячеек памяти внутренней EEPROM для хранения адресов "битых" ячеек памяти внешней EEPROM
#define BAD_EEPEXT_BYTE          2    // Количество байт для хранения одного адреса "битой" ячейки памяти внешней EEPROM
//---------------------------------------------

// База данных для термометра
// Всего 1024 значения для АЦП=[0;1023]
static PROGMEM const uint16_t table_termores[1024] = {
	0, 0, 0, 0, 0, 0, 698, 1244, 1638, 1960, 2237, 2482, 2704, 2907, 3095, 3271, 3435, 3591, 3738, 3879, 4013, 
	4141, 4264, 4382, 4496, 4606, 4713, 4816, 4915, 5012, 5106, 5198, 5287, 5374, 5459, 5542, 5622, 5701, 5779, 
	5854, 5928, 6001, 6072, 6142, 6210, 6277, 6343, 6408, 6472, 6534, 6596, 6657, 6716, 6775, 6833, 6890, 6946, 
	7001, 7056, 7110, 7163, 7215, 7267, 7318, 7368, 7418, 7467, 7515, 7563, 7611, 7658, 7704, 7750, 7795, 7840, 
	7884, 7928, 7971, 8014, 8056, 8098, 8140, 8181, 8222, 8262, 8302, 8342, 8381, 8420, 8459, 8497, 8535, 8572, 
	8609, 8646, 8683, 8719, 8755, 8791, 8826, 8861, 8896, 8930, 8965, 8999, 9032, 9066, 9099, 9132, 9165, 9197, 
	9229, 9261, 9293, 9325, 9356, 9387, 9418, 9449, 9479, 9509, 9540, 9569, 9599, 9629, 9658, 9687, 9716, 9745, 
	9773, 9802, 9830, 9858, 9886, 9913, 9941, 9968, 9996, 10023, 10050, 10076, 10103, 10129, 10156, 10182, 10208, 
	10234, 10259, 10285, 10310, 10336, 10361, 10386, 10411, 10436, 10460, 10485, 10509, 10533, 10558, 10582, 10606, 
	10629, 10653, 10677, 10700, 10723, 10747, 10770, 10793, 10816, 10838, 10861, 10884, 10906, 10928, 10951, 10973, 
	10995, 11017, 11039, 11061, 11082, 11104, 11125, 11147, 11168, 11189, 11210, 11231, 11252, 11273, 11294, 11315, 
	11335, 11356, 11376, 11396, 11417, 11437, 11457, 11477, 11497, 11517, 11537, 11556, 11576, 11596, 11615, 11634, 
	11654, 11673, 11692, 11711, 11730, 11749, 11768, 11787, 11806, 11824, 11843, 11862, 11880, 11899, 11917, 11935, 
	11953, 11972, 11990, 12008, 12026, 12044, 12062, 12079, 12097, 12115, 12132, 12150, 12167, 12185, 12202, 12220, 
	12237, 12254, 12271, 12288, 12305, 12322, 12339, 12356, 12373, 12390, 12406, 12423, 12440, 12456, 12473, 12489, 
	12506, 12522, 12538, 12555, 12571, 12587, 12603, 12619, 12635, 12651, 12667, 12683, 12699, 12714, 12730, 12746, 
	12761, 12777, 12793, 12808, 12824, 12839, 12854, 12870, 12885, 12900, 12915, 12931, 12946, 12961, 12976, 12991, 
	13006, 13021, 13036, 13050, 13065, 13080, 13095, 13109, 13124, 13138, 13153, 13168, 13182, 13196, 13211, 13225, 
	13240, 13254, 13268, 13282, 13296, 13311, 13325, 13339, 13353, 13367, 13381, 13395, 13409, 13422, 13436, 13450, 
	13464, 13478, 13491, 13505, 13519, 13532, 13546, 13559, 13573, 13586, 13600, 13613, 13626, 13640, 13653, 13666, 
	13680, 13693, 13706, 13719, 13732, 13745, 13758, 13771, 13784, 13797, 13810, 13823, 13836, 13849, 13862, 13874, 
	13887, 13900, 13913, 13925, 13938, 13951, 13963, 13976, 13988, 14001, 14013, 14026, 14038, 14051, 14063, 14075, 
	14088, 14100, 14112, 14124, 14137, 14149, 14161, 14173, 14185, 14197, 14209, 14222, 14234, 14246, 14257, 14269, 
	14281, 14293, 14305, 14317, 14329, 14341, 14352, 14364, 14376, 14388, 14399, 14411, 14422, 14434, 14446, 14457, 
	14469, 14480, 14492, 14503, 14515, 14526, 14538, 14549, 14560, 14572, 14583, 14594, 14606, 14617, 14628, 14639, 
	14650, 14662, 14673, 14684, 14695, 14706, 14717, 14728, 14739, 14750, 14761, 14772, 14783, 14794, 14805, 14816, 
	14827, 14838, 14848, 14859, 14870, 14881, 14891, 14902, 14913, 14924, 14934, 14945, 14956, 14966, 14977, 14987, 
	14998, 15008, 15019, 15029, 15040, 15050, 15061, 15071, 15082, 15092, 15102, 15113, 15123, 15133, 15144, 15154, 
	15164, 15175, 15185, 15195, 15205, 15215, 15226, 15236, 15246, 15256, 15266, 15276, 15286, 15296, 15306, 15316, 
	15326, 15336, 15346, 15356, 15366, 15376, 15386, 15396, 15406, 15416, 15425, 15435, 15445, 15455, 15465, 15474, 
	15484, 15494, 15504, 15513, 15523, 15533, 15542, 15552, 15562, 15571, 15581, 15590, 15600, 15610, 15619, 15629, 
	15638, 15648, 15657, 15667, 15676, 15685, 15695, 15704, 15714, 15723, 15732, 15742, 15751, 15760, 15770, 15779, 
	15788, 15798, 15807, 15816, 15825, 15834, 15844, 15853, 15862, 15871, 15880, 15889, 15899, 15908, 15917, 15926, 
	15935, 15944, 15953, 15962, 15971, 15980, 15989, 15998, 16007, 16016, 16025, 16034, 16043, 16052, 16061, 16069, 
	16078, 16087, 16096, 16105, 16114, 16122, 16131, 16140, 16149, 16157, 16166, 16175, 16184, 16192, 16201, 16210, 
	16218, 16227, 16236, 16244, 16253, 16262, 16270, 16279, 16287, 16296, 16304, 16313, 16322, 16330, 16339, 16347, 
	16356, 16364, 16372, 16381, 16389, 16398, 16406, 16415, 16423, 16431, 16440, 16448, 16456, 16465, 16473, 16481, 
	16490, 16498, 16506, 16515, 16523, 16531, 16539, 16548, 16556, 16564, 16572, 16581, 16589, 16597, 16605, 16613, 
	16621, 16629, 16638, 16646, 16654, 16662, 16670, 16678, 16686, 16694, 16702, 16710, 16718, 16726, 16734, 16742, 
	16750, 16758, 16766, 16774, 16782, 16790, 16798, 16806, 16814, 16822, 16830, 16837, 16845, 16853, 16861, 16869, 
	16877, 16885, 16892, 16900, 16908, 16916, 16923, 16931, 16939, 16947, 16954, 16962, 16970, 16978, 16985, 16993, 
	17001, 17008, 17016, 17024, 17031, 17039, 17047, 17054, 17062, 17069, 17077, 17085, 17092, 17100, 17107, 17115, 
	17122, 17130, 17138, 17145, 17153, 17160, 17168, 17175, 17183, 17190, 17197, 17205, 17212, 17220, 17227, 17235, 
	17242, 17249, 17257, 17264, 17272, 17279, 17286, 17294, 17301, 17308, 17316, 17323, 17330, 17338, 17345, 17352, 
	17360, 17367, 17374, 17381, 17389, 17396, 17403, 17410, 17417, 17425, 17432, 17439, 17446, 17453, 17461, 17468, 
	17475, 17482, 17489, 17496, 17503, 17511, 17518, 17525, 17532, 17539, 17546, 17553, 17560, 17567, 17574, 17581, 
	17588, 17595, 17602, 17610, 17617, 17624, 17631, 17638, 17644, 17651, 17658, 17665, 17672, 17679, 17686, 17693, 
	17700, 17707, 17714, 17721, 17728, 17735, 17741, 17748, 17755, 17762, 17769, 17776, 17783, 17789, 17796, 17803, 
	17810, 17817, 17824, 17830, 17837, 17844, 17851, 17857, 17864, 17871, 17878, 17884, 17891, 17898, 17905, 17911, 
	17918, 17925, 17931, 17938, 17945, 17951, 17958, 17965, 17971, 17978, 17985, 17991, 17998, 18005, 18011, 18018, 
	18024, 18031, 18038, 18044, 18051, 18057, 18064, 18070, 18077, 18084, 18090, 18097, 18103, 18110, 18116, 18123, 
	18129, 18136, 18142, 18149, 18155, 18162, 18168, 18175, 18181, 18188, 18194, 18200, 18207, 18213, 18220, 18226, 
	18233, 18239, 18245, 18252, 18258, 18264, 18271, 18277, 18284, 18290, 18296, 18303, 18309, 18315, 18322, 18328, 
	18334, 18341, 18347, 18353, 18359, 18366, 18372, 18378, 18385, 18391, 18397, 18403, 18410, 18416, 18422, 18428, 
	18435, 18441, 18447, 18453, 18459, 18466, 18472, 18478, 18484, 18490, 18497, 18503, 18509, 18515, 18521, 18527, 
	18533, 18540, 18546, 18552, 18558, 18564, 18570, 18576, 18582, 18588, 18595, 18601, 18607, 18613, 18619, 18625, 
	18631, 18637, 18643, 18649, 18655, 18661, 18667, 18673, 18679, 18685, 18691, 18697, 18703, 18709, 18715, 18721, 
	18727, 18733, 18739, 18745, 18751, 18757, 18763, 18769, 18775, 18781, 18787, 18793, 18798, 18804, 18810, 18816, 
	18822, 18828, 18834, 18840, 18846, 18851, 18857, 18863, 18869, 18875, 18881, 18887, 18892, 18898, 18904, 18910, 
	18916, 18922, 18927, 18933, 18939, 18945, 18951, 18956, 18962, 18968, 18974, 18979, 18985, 18991, 18997, 19002, 
	19008, 19014, 19020, 19025, 19031, 19037, 19043, 19048, 19054, 19060, 19065, 19071, 19077, 19082, 19088, 19094, 
	19100, 19105, 19111, 19116, 19122, 19128, 19133, 19139, 19145, 19150, 19156, 19162, 19167, 19173, 19178, 19184, 
	19190, 19195, 19201, 19206, 19212, 19218, 19223, 19229, 19234, 19240, 19245, 19251, 19257, 19262
};

// Чтобы воспользоваться значением из таблицы, используй:
// pgm_read_byte(data); - прочитать байт из flash
// pgm_read_word(data); - прочитать слово из flash (2 байта)
// pgm_read_dword(data); - прочитать двойное слово (4 байта)
// pgm_read_float(data);
// pgm_read_word(&table_termores[x]); , где x - величина [0;1023]
// Температура представлена в виде целого числа (две последне цифры - доля градуса), так что полученное значение нужно делить на 100

#endif /* BD_H_ */